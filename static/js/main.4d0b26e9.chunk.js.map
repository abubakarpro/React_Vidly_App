{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","common/listGroup.jsx","common/pagination.jsx","common/like.jsx","components/tableRow.jsx","components/moviesTable.jsx","components/movies.jsx","utils/paginate.jsx","components/navBar.jsx","components/customers.jsx","components/movieForm.jsx","components/rentals.jsx","components/notFound.jsx","common/input.jsx","common/form.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","ListGroup","props","items","onItemSelect","selectedItem","react_default","a","createElement","className","map","item","key","onClick","Pagination","pageSize","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","style","cursor","Like","classes","aria-hidden","Row","movie","onLike","onDelete","react_router_dom","to","concat","like","MoviesTable","tableRow","Movies","state","selectedGenre","handleDelete","_this","filter","m","setState","handleLike","Object","toConsumableArray","index","indexOf","objectSpread","handlePageChange","handleGenresSelect","g","this","count","length","_this$state","allMovies","filtered","pageNumber","startIndex","slice","take","value","paginate","listGroup","moviesTable","pagination","Component","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Customers","MovieForm","match","params","history","push","Rentals","NotFount","Input","label","onChange","error","htmlFor","Form","data","errors","validate","result","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","next","done","path","message","err","return","validateProperty","_ref","obj","defineProperty","handleChange","_ref2","input","currentTarget","errorMessage","handleSubmit","e","preventDefault","doSubmit","renderButton","disabled","renderInput","arguments","common_input","LoginForm","username","password","string","required","console","log","onSubmit","RegisterForm","email","min","App","navBar","marginLeft","react_router","component","exact","NotFound","from","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d0b26e9.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\r\n\r\nconst ListGroup = props => {\r\n  const { items, onItemSelect, selectedItem } = props;\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li key={item._id} onClick={() => onItemSelect(item)} className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}>\r\n          {item.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = props => {\r\n  const { pageSize, itemsCount, currentPage, onPageChange } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a\r\n              className=\"page-link\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pageSize: PropTypes.number.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Like from \"../common/like\"\r\n\r\n\r\n\r\nconst Row = (props) => {\r\n    const { movie, onLike, onDelete } = props;\r\n    return (<tr key={movie._id}>\r\n        <td><Link to={`/movies/${movie._id}`}>{movie.title}</Link></td>\r\n\r\n        <td>{movie.genre.name}</td>\r\n        <td>{movie.numberInStock}</td>\r\n        <td>{movie.dailyRentalRate}</td>\r\n        <td>\r\n            <Like\r\n                liked={movie.liked}\r\n                onClick={() => onLike(movie)}\r\n            />\r\n        </td>\r\n        <td>\r\n            <button\r\n                className=\"btn-danger\"\r\n                onClick={() => onDelete(movie)}\r\n            >\r\n                Delete\r\n</button>\r\n        </td>\r\n    </tr>);\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport TableRow from './tableRow'\r\n\r\n\r\n\r\nconst MoviesTable = (props) => {\r\n\r\n    const { movies, onDelete, onLike } = props;\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Genre</th>\r\n                    <th>Stock</th>\r\n                    <th>Rate</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {movies.map(movie => (\r\n                    <TableRow key={movie._id} movie={movie} onLike={onLike} onDelete={onDelete} />\r\n\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default MoviesTable;","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport ListGroup from \"../common/listGroup\";\r\nimport Pagination from \"../common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport MoviesTable from \"./moviesTable\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    selectedGenre: \"\"\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ name: 'All Genres', _id: '' }, ...getGenres()]\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n\r\n    const { pageSize, currentPage, selectedGenre, movies: allMovies } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in DataBase</p>;\r\n\r\n\r\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\r\n\r\n    const movies = paginate(filtered, currentPage, pageSize);\r\n\r\n    return (\r\n      <div >\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <ListGroup\r\n              items={this.state.genres}\r\n              selectedItem={this.state.selectedGenre}\r\n              onItemSelect={this.handleGenresSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <p>There are {filtered.length} movies in DataBase </p>\r\n\r\n            <MoviesTable movies={movies} onLike={this.handleLike} onDelete={this.handleDelete} />\r\n\r\n            <Pagination\r\n              itemsCount={filtered.length}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleDelete = movie => {\r\n\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenresSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n    return (<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item \">\r\n                    <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/customers\">Customer</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/loginForm\">Login</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/registerForm\">Register</NavLink>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    </nav>);\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\n\r\n\r\nconst Customers = () => {\r\n    return (<h1>Customers</h1>);\r\n}\r\n\r\nexport default Customers;","import React from 'react'\r\n\r\n\r\n\r\nconst MovieForm = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>movie id is : {props.match.params.id}</h1>\r\n            <button className=\"btn btn-primary\" onClick={() => props.history.push('/movies')}>Save</button>\r\n\r\n        </div>);\r\n}\r\n\r\nexport default MovieForm;","import React from 'react';\r\n\r\n\r\nconst Rentals = () => {\r\n    return (<h1>Rentals</h1>);\r\n}\r\n\r\nexport default Rentals;","import React from 'react';\r\n\r\nconst NotFount = () => {\r\n    return (<h1>Not Found (404) Page </h1>);\r\n}\r\n\r\nexport default NotFount;","import React from 'react'\r\n\r\n\r\nconst Input = (props) => {\r\n    const { name, label, onChange, value, type, error } = props;\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n\r\n                value={value}\r\n                onChange={onChange}\r\n                name={name}\r\n                type={type}\r\n                id={name}\r\n                className=\"form-control\"\r\n            />\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Input from \"../common/input\"\r\nimport Joi from \"joi-browser\"\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    }\r\n\r\n    validate = () => {\r\n        const result = Joi.validate(this.state.data, this.schema, { abortEarly: false });\r\n\r\n        if (!result.error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of result.error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n\r\n    }\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n\r\n        this.setState({ data, errors });\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n\r\n        this.doSubmit();\r\n    }\r\n\r\n    renderButton = (label) => {\r\n        return <button disabled={this.validate()} type=\"submit\" className=\"btn btn-primary\">{label}</button>\r\n    }\r\n\r\n    renderInput = (name, label, type = \"text\") => {\r\n        const { data, errors } = this.state;\r\n        return (\r\n\r\n            <Input\r\n                type={type}\r\n                label={label}\r\n                id={name}\r\n                name={name}\r\n                onChange={this.handleChange}\r\n                value={data[name]}\r\n                error={errors[name]}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Form from \"../common/form\"\r\n\r\n\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: { username: '', password: '' },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n\r\n    }\r\n\r\n    doSubmit = () => {\r\n        console.log(\"submitted\");\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div >\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\")}\r\n                    {this.renderButton(\"login\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react'\r\nimport Form from \"../common/form\"\r\nimport Joi from \"joi-browser\"\r\n\r\n\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data: { username: \"\", password: \"\", name: \"\" },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().email().label('Username'),\r\n        password: Joi.string().required().min(5).label('Password'),\r\n        name: Joi.string().required().label(\"Name\")\r\n\r\n    }\r\n\r\n    doSubmit = () => {\r\n        console.log(\"Registered\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderInput(\"name\", \"Name\")}\r\n                    {this.renderButton(\"Register\")}\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from \"react\";\nimport Movies from \"./components/movies\";\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport NavBar from \"./components/navBar\"\nimport Customers from \"./components/customers\"\nimport MovieForm from \"./components/movieForm\"\nimport Rentals from \"./components/rentals\"\nimport NotFound from \"./components/notFound\"\nimport LoginForm from \"./components/loginForm\"\nimport RegisterForm from \"./components/registerForm\"\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <NavBar />\n        <div className=\"container\" style={{ marginLeft: \"70px\" }}>\n          <Switch>\n            <Route path=\"/RegisterForm\" component={RegisterForm} />\n            <Route path=\"/loginForm\" component={LoginForm} />\n            <Route path=\"/movies/:id\" component={MovieForm} />\n            <Route path=\"/movies\" component={Movies} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/movieForm\" component={MovieForm} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route exact path=\"/notFound\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/notFound\" />\n\n          </Switch>\n\n        </div>\n\n\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}